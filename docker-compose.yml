version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - backend_data:/app/ml/models
    environment:
      - FLASK_ENV=production
      - FLASK_APP=app.py
      - MYSQL_HOST=mysql
      - MYSQL_USER=mi_health
      - MYSQL_PASSWORD=mi_health_password
      - MYSQL_DATABASE=mi_health_tracker
      - MONGO_URI=mongodb://mongo:27017/mi_health_tracker
      - CORS_ORIGINS=http://localhost:3000
    depends_on:
      - mysql
      - mongo
    restart: unless-stopped
    networks:
      - mi-health-network

  # Frontend React app
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - mi-health-network

  # MySQL database
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=mi_health_tracker
      - MYSQL_USER=mi_health
      - MYSQL_PASSWORD=mi_health_password
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    networks:
      - mi-health-network

  # MongoDB for logs and unstructured data
  mongo:
    image: mongo:5.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    networks:
      - mi-health-network

volumes:
  mysql_data:
  mongo_data:
  backend_data:

networks:
  mi-health-network:
    driver: bridge 